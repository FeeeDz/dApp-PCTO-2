import { ERC20 } from "./erc20";
import { ERC721 } from "./erc721";
import { DepositManager, RegistryContract, WithdrawManager } from "./contracts";
import { BridgeClient, ITransactionOption, TYPE_AMOUNT } from "@maticnetwork/maticjs";
import { IPlasmaClientConfig } from "./interfaces";
export declare class PlasmaClient extends BridgeClient<IPlasmaClientConfig> {
    withdrawManager: WithdrawManager;
    depositManager: DepositManager;
    registry: RegistryContract;
    init(config: IPlasmaClientConfig): Promise<this>;
    private getContracts_;
    erc20(tokenAddress: string, isParent?: boolean): ERC20;
    erc721(tokenAddress: string, isParent?: boolean): ERC721;
    withdrawExit(tokens: string | string[], option?: ITransactionOption): Promise<import("@maticnetwork/maticjs").ITransactionWriteResult>;
    depositEther(amount: TYPE_AMOUNT, option: ITransactionOption): any;
}
